{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tzach/Downloads/all/Tz Files/project/node-postgres-docker-compose-skeleton-master/app/src/modules/player.jsx\";\nimport React from 'react';\nimport BasicTable from \"./table.jsx\";\nimport animateActions from \"./animate.js\";\nlet cursor;\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableHeaders: ['Session Date', 'Duration', 'Play'],\n      tableData: null,\n      showPlayer: false\n    };\n  }\n\n  componentDidMount() {\n    this.getRecords();\n  }\n\n  async handleShowPlayer(recordIdx) {\n    let recordToPlay = this.state.recordsData.some((el, idx) => {\n      return recordIdx === idx ? el : null;\n    });\n  }\n\n  async getRecords() {\n    try {\n      const callRes = await fetch('http://localhost:3000/test_db/getRecords', {\n        // const res = await fetch('http://localhost:5000/test_db/saveRecord', {\n        method: 'get',\n        dataType: 'json',\n        contentType: 'application/json; charset=utf-8'\n      });\n      const finalRes = await callRes.json();\n      const failedToGetData = !(finalRes && finalRes.data && finalRes.statusCode === 200);\n\n      if (failedToGetData) {\n        console.error('Failed to get records');\n      }\n\n      const recordsData = finalRes.data.recordsData || [];\n      const tableData = recordsData.map(record => {\n        return {\n          sessionDate: record.sessionDate,\n          duration: record.duration,\n          play: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handlePlayClick.bind(this, record.recordEvents),\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 27\n          }, this)\n        };\n      });\n      this.setState({\n        tableData: tableData || [],\n        recordsData: recordsData || []\n      });\n    } catch (ex) {\n      console.error(ex);\n    }\n  }\n\n  handlePlayClick(steps) {\n    this.setState({\n      showPlayer: true\n    }, this.play.bind(this, steps));\n  }\n\n  play(steps) {\n    let preTime = 0;\n    let nowTime = 0;\n    console.log('Playing recording with', steps.length, 'steps');\n    cursor = animateActions.showCursor(cursor);\n    let stepNumber = 0;\n    let stepsCount = steps.length;\n    let timeout, currentStep;\n\n    (function animate() {\n      currentStep = steps[stepNumber];\n\n      if (currentStep.type === 'move') {\n        cursor = animateActions.setCursorPosition(currentStep.x, currentStep.y, cursor);\n      }\n\n      if (currentStep.type === 'click') {\n        animateActions.clickOnElementAtPosition(currentStep.x, currentStep.y);\n      }\n\n      if (currentStep.type === 'scroll') {\n        window.scrollTo(currentStep.x, currentStep.y);\n      }\n\n      preTime = nowTime;\n      nowTime = currentStep.time;\n      stepNumber++;\n\n      if (stepNumber === stepsCount) {\n        console.log('Finished playing recording');\n        window.clearTimeout(timeout);\n        cursor = animateActions.hideCursor(cursor);\n      } else {\n        setTimeout(() => {\n          animate();\n        }, preTime - nowTime);\n      }\n    })();\n  } //  clickOnElementAtPosition(x, y) {\n  //     let clickCandidate = document.elementFromPoint(x, y);\n  //\n  //     while (clickCandidate && !clickCandidate.click) {\n  //         clickCandidate = clickCandidate.parentNode;\n  //     }\n  //\n  //     if (clickCandidate && clickCandidate.click) {\n  //         clickCandidate.click();\n  //     }\n  // }\n  //\n  //  getCursor() {\n  //     const cursorNode = document.createElement('div');\n  //\n  //     cursorNode.style.borderRadius = '50%';\n  //     cursorNode.style.background = 'red';\n  //     cursorNode.style.width = '10px';\n  //     cursorNode.style.height = '10px';\n  //     cursorNode.style.position = 'fixed';\n  //     cursorNode.style.top = 0;\n  //     cursorNode.style.left = 0;\n  //     cursorNode.style.zIndex = 999;\n  //\n  //     return cursorNode;\n  // }\n  //  setCursorPosition(x, y) {\n  //     cursor.style.left = x + 'px';\n  //     cursor.style.top = y + 'px';\n  // }\n  //\n  //  showCursor() {\n  //     cursor = cursor || this.getCursor();\n  //     document.body.appendChild(cursor);\n  // }\n  //\n  //  hideCursor() {\n  //     document.body.removeChild(cursor);\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.showPlayer ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"playerCanvas\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 43\n      }, this) : /*#__PURE__*/_jsxDEV(BasicTable, {\n        tableHeaders: this.state.tableHeaders || [],\n        tableData: this.state.tableData || [],\n        handleShowPlayer: this.handleShowPlayer.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Player;","map":{"version":3,"sources":["/Users/tzach/Downloads/all/Tz Files/project/node-postgres-docker-compose-skeleton-master/app/src/modules/player.jsx"],"names":["React","BasicTable","animateActions","cursor","Player","Component","constructor","props","state","tableHeaders","tableData","showPlayer","componentDidMount","getRecords","handleShowPlayer","recordIdx","recordToPlay","recordsData","some","el","idx","callRes","fetch","method","dataType","contentType","finalRes","json","failedToGetData","data","statusCode","console","error","map","record","sessionDate","duration","play","handlePlayClick","bind","recordEvents","setState","ex","steps","preTime","nowTime","log","length","showCursor","stepNumber","stepsCount","timeout","currentStep","animate","type","setCursorPosition","x","y","clickOnElementAtPosition","window","scrollTo","time","clearTimeout","hideCursor","setTimeout","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BasicTable from \"./table.jsx\";\nimport animateActions from \"./animate.js\";\nlet cursor;\n\n\nclass Player extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            tableHeaders: ['Session Date', 'Duration', 'Play'],\n            tableData: null,\n            showPlayer: false\n        }\n    }\n    componentDidMount() {\n        this.getRecords();\n    }\n\n    async handleShowPlayer(recordIdx) {\n        let recordToPlay = this.state.recordsData.some((el, idx) =>{ return recordIdx  === idx ? el : null});\n    }\n\n    async getRecords() {\n        try {\n            const callRes = await fetch('http://localhost:3000/test_db/getRecords', {\n                // const res = await fetch('http://localhost:5000/test_db/saveRecord', {\n                method: 'get',\n                dataType: 'json',\n                contentType: 'application/json; charset=utf-8'\n            })\n            const finalRes = await callRes.json();\n            const failedToGetData = !(finalRes && finalRes.data && finalRes.statusCode === 200);\n            if (failedToGetData) {\n                console.error('Failed to get records');\n            }\n            const recordsData = finalRes.data.recordsData || [];\n            const tableData = recordsData.map((record) =>{\n                return {\n                    sessionDate: record.sessionDate,\n                    duration: record.duration,\n                    play: <button onClick={this.handlePlayClick.bind(this, record.recordEvents)}>Play</button>\n                }\n            });\n            this.setState({tableData: tableData || [], recordsData: recordsData || []})\n        } catch (ex) {\n            console.error(ex)\n        }\n    }\n\n    handlePlayClick(steps) {\n        this.setState({showPlayer: true}, this.play.bind(this, steps))\n    }\n\n    play(steps) {\n        let preTime = 0;\n        let nowTime = 0;\n        console.log('Playing recording with', steps.length, 'steps');\n\n        cursor = animateActions.showCursor(cursor);\n\n        let stepNumber = 0;\n        let stepsCount = steps.length;\n        let timeout, currentStep;\n\n        (function animate() {\n            currentStep = steps[stepNumber];\n            if (currentStep.type === 'move') {\n                cursor = animateActions.setCursorPosition(currentStep.x, currentStep.y, cursor);\n            }\n\n            if (currentStep.type === 'click') {\n                animateActions.clickOnElementAtPosition(currentStep.x, currentStep.y);\n            }\n\n            if (currentStep.type === 'scroll') {\n                window.scrollTo(currentStep.x, currentStep.y);\n            }\n\n            preTime = nowTime;\n            nowTime = currentStep.time;\n\n            stepNumber++;\n\n            if (stepNumber === stepsCount) {\n                console.log('Finished playing recording');\n                window.clearTimeout(timeout);\n                cursor = animateActions.hideCursor(cursor);\n            } else {\n                setTimeout(() => {\n                    animate()\n                }, preTime - nowTime);\n\n            }\n        }());\n    }\n    //  clickOnElementAtPosition(x, y) {\n    //     let clickCandidate = document.elementFromPoint(x, y);\n    //\n    //     while (clickCandidate && !clickCandidate.click) {\n    //         clickCandidate = clickCandidate.parentNode;\n    //     }\n    //\n    //     if (clickCandidate && clickCandidate.click) {\n    //         clickCandidate.click();\n    //     }\n    // }\n    //\n    //  getCursor() {\n    //     const cursorNode = document.createElement('div');\n    //\n    //     cursorNode.style.borderRadius = '50%';\n    //     cursorNode.style.background = 'red';\n    //     cursorNode.style.width = '10px';\n    //     cursorNode.style.height = '10px';\n    //     cursorNode.style.position = 'fixed';\n    //     cursorNode.style.top = 0;\n    //     cursorNode.style.left = 0;\n    //     cursorNode.style.zIndex = 999;\n    //\n    //     return cursorNode;\n    // }\n\n    //  setCursorPosition(x, y) {\n    //     cursor.style.left = x + 'px';\n    //     cursor.style.top = y + 'px';\n    // }\n    //\n    //  showCursor() {\n    //     cursor = cursor || this.getCursor();\n    //     document.body.appendChild(cursor);\n    // }\n    //\n    //  hideCursor() {\n    //     document.body.removeChild(cursor);\n    // }\n\n    render() {\n        return (\n            <div>\n                {this.state.showPlayer ?  <div id={\"playerCanvas\"}> </div> :\n                    <BasicTable\n                    tableHeaders={this.state.tableHeaders || []}\n                    tableData={this.state.tableData || []}\n                    handleShowPlayer={this.handleShowPlayer.bind(this)}\n                />}\n\n            </div>\n        );\n    }\n}\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}