{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tzach/Downloads/all/Tz Files/project/node-postgres-docker-compose-skeleton-master/app/src/modules/player.jsx\";\nimport React from 'react';\nimport BasicTable from \"./table.jsx\";\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableHeaders: ['name', 'date', 'time'],\n      tableData: null\n    };\n  }\n\n  componentDidMount() {\n    this.getRecords();\n  }\n\n  async getRecords() {\n    try {\n      const callRes = await fetch('http://localhost:3000/test_db/getRecords', {\n        // const res = await fetch('http://localhost:5000/test_db/saveRecord', {\n        method: 'get',\n        dataType: 'json',\n        contentType: 'application/json; charset=utf-8'\n      });\n      const finalRes = await callRes.json();\n\n      if (finalRes && finalRes.data && finalRes.statusCode === 200) {\n        this.setState({\n          tableData: finalRes.data.tableData || []\n        });\n        console.log(\"Saved to DB\");\n      } else {\n        console.error('Failed to save ');\n      }\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BasicTable, {\n        tableHeaders: this.state.tableHeaders || [],\n        tableData: this.state.tableData || []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Player;","map":{"version":3,"sources":["/Users/tzach/Downloads/all/Tz Files/project/node-postgres-docker-compose-skeleton-master/app/src/modules/player.jsx"],"names":["React","BasicTable","Player","Component","constructor","props","state","tableHeaders","tableData","componentDidMount","getRecords","callRes","fetch","method","dataType","contentType","finalRes","json","data","statusCode","setState","console","log","error","ex","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CADN;AAERC,MAAAA,SAAS,EAAE;AAFH,KAAZ;AAIH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL;AACH;;AAED,QAAMA,UAAN,GAAmB;AACf,QAAI;AACA,YAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,0CAAD,EAA6C;AACpE;AACAC,QAAAA,MAAM,EAAE,KAF4D;AAGpEC,QAAAA,QAAQ,EAAE,MAH0D;AAIpEC,QAAAA,WAAW,EAAE;AAJuD,OAA7C,CAA3B;AAMA,YAAMC,QAAQ,GAAG,MAAML,OAAO,CAACM,IAAR,EAAvB;;AAEA,UAAID,QAAQ,IAAIA,QAAQ,CAACE,IAArB,IAA6BF,QAAQ,CAACG,UAAT,KAAwB,GAAzD,EAA8D;AAC1D,aAAKC,QAAL,CAAc;AAACZ,UAAAA,SAAS,EAAEQ,QAAQ,CAACE,IAAT,CAAcV,SAAd,IAA2B;AAAvC,SAAd;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,OAHD,MAGO;AACHD,QAAAA,OAAO,CAACE,KAAR,CAAc,iBAAd;AACH;AACJ,KAfD,CAeE,OAAOC,EAAP,EAAW;AACTH,MAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,UAAD;AACI,QAAA,YAAY,EAAE,KAAKnB,KAAL,CAAWC,YAAX,IAA2B,EAD7C;AAEI,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAAX,IAAwB;AAFvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA1CgC;;AA4CrC,eAAeN,MAAf","sourcesContent":["import React from 'react';\nimport BasicTable from \"./table.jsx\";\n\nclass Player extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            tableHeaders: ['name', 'date', 'time'],\n            tableData: null,\n        }\n    }\n    componentDidMount() {\n        this.getRecords();\n    }\n\n    async getRecords() {\n        try {\n            const callRes = await fetch('http://localhost:3000/test_db/getRecords', {\n                // const res = await fetch('http://localhost:5000/test_db/saveRecord', {\n                method: 'get',\n                dataType: 'json',\n                contentType: 'application/json; charset=utf-8'\n            })\n            const finalRes = await callRes.json();\n\n            if (finalRes && finalRes.data && finalRes.statusCode === 200) {\n                this.setState({tableData: finalRes.data.tableData || []})\n                console.log(\"Saved to DB\");\n            } else {\n                console.error('Failed to save ');\n            }\n        } catch (ex) {\n            console.log(ex)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <BasicTable\n                    tableHeaders={this.state.tableHeaders || []}\n                    tableData={this.state.tableData || []}\n                />\n            </div>\n        );\n    }\n}\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}