{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tzach/Downloads/all/Tz Files/project/recorder-player/app/src/modules/components/table.jsx\";\nimport React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  paper: {\n    height: 400,\n    width: '100%',\n    marginTop: 0,\n    overflow: 'auto',\n    background: '#ececec'\n  },\n  noDataShown: {\n    textAlign: 'center',\n    margin: '160px auto',\n    background: '#393939',\n    color: '#ececec'\n  }\n});\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: '#393939',\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: '#dcdcdc'\n    },\n    '&:nth-of-type(even)': {\n      backgroundColor: '#cbcbcb'\n    }\n  }\n}))(TableRow);\n\nconst createTableComponent = (props, classes) => {\n  const noDataLabel = `Lest start recording first`;\n  const tableHeaders = props.tableHeaders || [];\n  const tableData = props.tableData || [];\n  let componentToReturn; // if (props.showNoDataLabel) {\n  //     componentToReturn = <div className={classes.noDataShown} style={{minWidth: props.width}}>{noDataLabel}</div>\n  // } else {\n\n  componentToReturn = /*#__PURE__*/_jsxDEV(Table, {\n    style: {\n      minWidth: props.width\n    },\n    stickyHeader: true,\n    \"aria-label\": \"simple table\",\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(StyledTableRow, {\n        hover: true,\n        children: tableHeaders.map((header, cellIdx) => {\n          return /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: header\n          }, cellIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 32\n          }, this);\n        })\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      children: props.showNoDataLabel ? /*#__PURE__*/_jsxDEV(StyledTableRow, {\n        hover: true,\n        children: [\" \", noDataLabel]\n      }, 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this) : tableData.map((data, rowIdx) => {\n        return /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          hover: true,\n          children: [\" \", Object.keys(data).map((key, cellIdx) => {\n            return /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: data[key]\n            }, cellIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 36\n            }, this);\n          })]\n        }, rowIdx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 29\n  }, this); // }\n\n  return componentToReturn;\n};\n\nfunction BasicTable(props) {\n  const {\n    classes,\n    theme\n  } = props;\n  const tableComponent = createTableComponent(props, classes);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    className: classes.paper,\n    style: {\n      'overflowY': 'scroll'\n    },\n    children: tableComponent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_c = BasicTable;\nexport default withStyles(styles, {\n  withTheme: true\n})(BasicTable);\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/tzach/Downloads/all/Tz Files/project/recorder-player/app/src/modules/components/table.jsx"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","withStyles","styles","theme","paper","height","width","marginTop","overflow","background","noDataShown","textAlign","margin","color","StyledTableCell","head","backgroundColor","palette","common","white","body","fontSize","StyledTableRow","root","createTableComponent","props","classes","noDataLabel","tableHeaders","tableData","componentToReturn","minWidth","map","header","cellIdx","showNoDataLabel","data","rowIdx","Object","keys","key","BasicTable","tableComponent","withTheme"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE,GADL;AAEHC,IAAAA,KAAK,EAAE,MAFJ;AAGHC,IAAAA,SAAS,EAAE,CAHR;AAIHC,IAAAA,QAAQ,EAAE,MAJP;AAKHC,IAAAA,UAAU,EAAE;AALT,GADc;AAQrBC,EAAAA,WAAW,EAAE;AACTC,IAAAA,SAAS,EAAE,QADF;AAETC,IAAAA,MAAM,EAAE,YAFC;AAGTH,IAAAA,UAAU,EAAE,SAHH;AAITI,IAAAA,KAAK,EAAG;AAJC;AARQ,CAAL,CAApB;;AAgBA,MAAMC,eAAe,GAAGb,UAAU,CAAEE,KAAD,KAAY;AAC3CY,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EAAE,SADf;AAEFH,IAAAA,KAAK,EAAEV,KAAK,CAACc,OAAN,CAAcC,MAAd,CAAqBC;AAF1B,GADqC;AAK3CC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR;AALqC,CAAZ,CAAD,CAAV,CAQpBzB,SARoB,CAAxB;AAUA,MAAM0B,cAAc,GAAGrB,UAAU,CAAEE,KAAD,KAAY;AAC1CoB,EAAAA,IAAI,EAAE;AACF,0BAAsB;AAClBP,MAAAA,eAAe,EAAE;AADC,KADpB;AAIF,2BAAuB;AACnBA,MAAAA,eAAe,EAAE;AADE;AAJrB;AADoC,CAAZ,CAAD,CAAV,CASnBjB,QATmB,CAAvB;;AAYA,MAAMyB,oBAAoB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC7C,QAAMC,WAAW,GAAI,4BAArB;AACA,QAAMC,YAAY,GAAGH,KAAK,CAACG,YAAN,IAAsB,EAA3C;AACA,QAAMC,SAAS,GAAGJ,KAAK,CAACI,SAAN,IAAmB,EAArC;AACA,MAAIC,iBAAJ,CAJ6C,CAM7C;AACA;AACA;;AACIA,EAAAA,iBAAiB,gBAAG,QAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAEN,KAAK,CAACnB;AAAjB,KAAd;AAAuC,IAAA,YAAY,MAAnD;AAAoD,kBAAW,cAA/D;AAAA,4BAEhB,QAAC,SAAD;AAAA,6BACI,QAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAA,kBACKsB,YAAY,CAACI,GAAb,CAAiB,CAACC,MAAD,EAASC,OAAT,KAAqB;AACnC,8BAAO,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC,IAA3B;AAAgC,YAAA,KAAK,EAAC,KAAtC;AAAA,sBAA2DD;AAA3D,aAAiDC,OAAjD;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA;AADL,SAA2B,CAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFgB,eAShB,QAAC,SAAD;AAAA,gBACKT,KAAK,CAACU,eAAN,gBACG,QAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAA,wBAAgCR,WAAhC;AAAA,SAA2B,CAA3B;AAAA;AAAA;AAAA;AAAA,cADH,GAGGE,SAAS,CAACG,GAAV,CAAc,CAACI,IAAD,EAAOC,MAAP,KAAkB;AAC5B,4BAAO,QAAC,cAAD;AAAgB,UAAA,KAAK,MAArB;AAAA,0BAAqCC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBJ,GAAlB,CAAsB,CAACQ,GAAD,EAAMN,OAAN,KAAkB;AAChF,gCAAO,QAAC,eAAD;AAAA,wBAAgCE,IAAI,CAACI,GAAD;AAApC,eAAsBN,OAAtB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAF2C,CAArC;AAAA,WAA2BG,MAA3B;AAAA;AAAA;AAAA;AAAA,gBAAP;AAIH,OALD;AAJR;AAAA;AAAA;AAAA;AAAA,YATgB;AAAA;AAAA;AAAA;AAAA;AAAA,UAApB,CATyC,CAgC7C;;AAEA,SAAOP,iBAAP;AACH,CAnCD;;AAqCA,SAASW,UAAT,CAAoBhB,KAApB,EAA2B;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAYvB,IAAAA;AAAZ,MAAqBsB,KAA3B;AACA,QAAMiB,cAAc,GAAGlB,oBAAoB,CAACC,KAAD,EAAQC,OAAR,CAA3C;AAEA,sBACI,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAE1B,KAA3B;AAAkC,IAAA,SAAS,EAAE0B,OAAO,CAACtB,KAArD;AAA4D,IAAA,KAAK,EAAE;AAAC,mBAAa;AAAd,KAAnE;AAAA,cACKsC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KATQD,U;AAUT,eAAexC,UAAU,CAACC,MAAD,EAAS;AAAEyC,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwCF,UAAxC,CAAf","sourcesContent":["import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    paper: {\n        height: 400,\n        width: '100%',\n        marginTop: 0,\n        overflow: 'auto',\n        background: '#ececec'\n    },\n    noDataShown: {\n        textAlign: 'center',\n        margin: '160px auto',\n        background: '#393939',\n        color:  '#ececec'\n    }\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: '#393939',\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: '#dcdcdc',\n        },\n        '&:nth-of-type(even)': {\n            backgroundColor: '#cbcbcb',\n        }\n    },\n}))(TableRow);\n\n\nconst createTableComponent = (props, classes) => {\n    const noDataLabel = `Lest start recording first`;\n    const tableHeaders = props.tableHeaders || [];\n    const tableData = props.tableData || [];\n    let componentToReturn;\n\n    // if (props.showNoDataLabel) {\n    //     componentToReturn = <div className={classes.noDataShown} style={{minWidth: props.width}}>{noDataLabel}</div>\n    // } else {\n        componentToReturn = <Table style={{minWidth: props.width}} stickyHeader aria-label=\"simple table\">\n\n            <TableHead>\n                <StyledTableRow hover key={0}>\n                    {tableHeaders.map((header, cellIdx) => {\n                        return <StyledTableCell component=\"th\" scope=\"row\" key={cellIdx}>{header}</StyledTableCell>;\n                    })}\n                </StyledTableRow>\n            </TableHead>\n            <TableBody>\n                {props.showNoDataLabel ?\n                    <StyledTableRow hover key={0}> {noDataLabel}\n                    </StyledTableRow>:\n                    tableData.map((data, rowIdx) => {\n                        return <StyledTableRow hover key={rowIdx}> {Object.keys(data).map((key, cellIdx) => {\n                            return <StyledTableCell key={cellIdx}>{data[key]}</StyledTableCell>;\n                        })}\n                        </StyledTableRow>\n                    })\n                }\n\n            </TableBody>\n        </Table>\n    // }\n\n    return componentToReturn;\n}\n\nfunction BasicTable(props) {\n    const { classes , theme} = props;\n    const tableComponent = createTableComponent(props, classes);\n\n    return (\n        <TableContainer component={Paper} className={classes.paper} style={{'overflowY': 'scroll'}}>\n            {tableComponent}\n        </TableContainer>\n    );\n}\nexport default withStyles(styles, { withTheme: true })(BasicTable);\n"]},"metadata":{},"sourceType":"module"}