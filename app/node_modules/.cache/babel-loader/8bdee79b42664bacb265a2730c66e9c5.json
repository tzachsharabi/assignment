{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tzach/Downloads/all/Tz Files/project/node-postgres-docker-compose-skeleton-master/app/src/modules/player.jsx\";\nimport React from 'react';\nimport BasicTable from \"./table.jsx\";\nimport animate from \"./animate.js\";\nlet preTime = 0;\nlet nowTime = 0;\nlet cursor;\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableHeaders: ['Session Date', 'Duration', 'Play'],\n      tableData: null,\n      showPlayer: false\n    };\n  }\n\n  componentDidMount() {\n    this.getRecords();\n  }\n\n  async handleShowPlayer(recordIdx) {\n    let recordToPlay = this.state.recordsData.some((el, idx) => {\n      return recordIdx === idx ? el : null;\n    });\n  }\n\n  async getRecords() {\n    try {\n      const callRes = await fetch('http://localhost:3000/test_db/getRecords', {\n        // const res = await fetch('http://localhost:5000/test_db/saveRecord', {\n        method: 'get',\n        dataType: 'json',\n        contentType: 'application/json; charset=utf-8'\n      });\n      const finalRes = await callRes.json();\n      const failedToGetData = !(finalRes && finalRes.data && finalRes.statusCode === 200);\n\n      if (failedToGetData) {\n        console.error('Failed to get records');\n      }\n\n      const recordsData = finalRes.data.recordsData || [];\n      const tableData = recordsData.map(record => {\n        return {\n          sessionDate: record.sessionDate,\n          duration: record.duration,\n          play: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handlePlayClick.bind(this, record.recordEvents),\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 27\n          }, this)\n        };\n      });\n      this.setState({\n        tableData: tableData || [],\n        recordsData: recordsData || []\n      });\n    } catch (ex) {\n      console.error(ex);\n    }\n  }\n\n  handlePlayClick(steps) {\n    this.setState({\n      showPlayer: true\n    }, this.play.bind(this, steps));\n  }\n\n  play(steps) {\n    console.log('Playing recording with', steps.length, 'steps');\n    this.showCursor();\n    let stepsCount = steps.length;\n    let timeout, currentStep;\n\n    for (let stepNumber = 0; stepNumber < steps.length; stepNumber++) {\n      currentStep = steps[stepNumber];\n\n      if (currentStep.type === 'move') {\n        this.setCursorPosition(currentStep.x, currentStep.y);\n      }\n\n      if (currentStep.type === 'click') {\n        this.clickOnElementAtPosition(currentStep.x, currentStep.y);\n      }\n\n      if (currentStep.type === 'scroll') {\n        window.scrollTo(currentStep.x, currentStep.y);\n      }\n\n      preTime = nowTime;\n      nowTime = currentStep.time;\n      stepNumber++;\n\n      if (stepNumber === stepsCount) {\n        console.log('Finished playing recording');\n        window.clearTimeout(timeout);\n        this.hideCursor();\n      } else {\n        timeout = window.setTimeout(animate, nowTime - preTime);\n      }\n    }\n  }\n\n  clickOnElementAtPosition(x, y) {\n    let clickCandidate = document.elementFromPoint(x, y);\n\n    while (clickCandidate && !clickCandidate.click) {\n      clickCandidate = clickCandidate.parentNode;\n    }\n\n    if (clickCandidate && clickCandidate.click) {\n      clickCandidate.click();\n    }\n  }\n\n  getCursor() {\n    const cursorNode = document.createElement('div');\n    cursorNode.style.borderRadius = '50%';\n    cursorNode.style.background = 'red';\n    cursorNode.style.width = '10px';\n    cursorNode.style.height = '10px';\n    cursorNode.style.position = 'fixed';\n    cursorNode.style.top = 0;\n    cursorNode.style.left = 0;\n    cursorNode.style.zIndex = 999;\n    return cursorNode;\n  }\n\n  setCursorPosition(x, y) {\n    cursor.style.left = x + 'px';\n    cursor.style.top = y + 'px';\n  }\n\n  showCursor() {\n    cursor = cursor || this.getCursor();\n    document.body.appendChild(cursor);\n  }\n\n  hideCursor() {\n    document.body.removeChild(cursor);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.showPlayer ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"playerCanvas\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 43\n      }, this) : /*#__PURE__*/_jsxDEV(BasicTable, {\n        tableHeaders: this.state.tableHeaders || [],\n        tableData: this.state.tableData || [],\n        handleShowPlayer: this.handleShowPlayer.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Player;","map":{"version":3,"sources":["/Users/tzach/Downloads/all/Tz Files/project/node-postgres-docker-compose-skeleton-master/app/src/modules/player.jsx"],"names":["React","BasicTable","animate","preTime","nowTime","cursor","Player","Component","constructor","props","state","tableHeaders","tableData","showPlayer","componentDidMount","getRecords","handleShowPlayer","recordIdx","recordToPlay","recordsData","some","el","idx","callRes","fetch","method","dataType","contentType","finalRes","json","failedToGetData","data","statusCode","console","error","map","record","sessionDate","duration","play","handlePlayClick","bind","recordEvents","setState","ex","steps","log","length","showCursor","stepsCount","timeout","currentStep","stepNumber","type","setCursorPosition","x","y","clickOnElementAtPosition","window","scrollTo","time","clearTimeout","hideCursor","setTimeout","clickCandidate","document","elementFromPoint","click","parentNode","getCursor","cursorNode","createElement","style","borderRadius","background","width","height","position","top","left","zIndex","body","appendChild","removeChild","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BasicTable from \"./table.jsx\";\nimport animate from \"./animate.js\";\nlet preTime = 0;\nlet nowTime = 0;\nlet cursor;\n\nclass Player extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            tableHeaders: ['Session Date', 'Duration', 'Play'],\n            tableData: null,\n            showPlayer: false\n        }\n    }\n    componentDidMount() {\n        this.getRecords();\n    }\n\n    async handleShowPlayer(recordIdx) {\n        let recordToPlay = this.state.recordsData.some((el, idx) =>{ return recordIdx  === idx ? el : null});\n    }\n\n    async getRecords() {\n        try {\n            const callRes = await fetch('http://localhost:3000/test_db/getRecords', {\n                // const res = await fetch('http://localhost:5000/test_db/saveRecord', {\n                method: 'get',\n                dataType: 'json',\n                contentType: 'application/json; charset=utf-8'\n            })\n            const finalRes = await callRes.json();\n            const failedToGetData = !(finalRes && finalRes.data && finalRes.statusCode === 200);\n            if (failedToGetData) {\n                console.error('Failed to get records');\n            }\n            const recordsData = finalRes.data.recordsData || [];\n            const tableData = recordsData.map((record) =>{\n                return {\n                    sessionDate: record.sessionDate,\n                    duration: record.duration,\n                    play: <button onClick={this.handlePlayClick.bind(this, record.recordEvents)}>Play</button>\n                }\n            });\n            this.setState({tableData: tableData || [], recordsData: recordsData || []})\n        } catch (ex) {\n            console.error(ex)\n        }\n    }\n\n    handlePlayClick(steps) {\n        this.setState({showPlayer: true}, this.play.bind(this, steps))\n    }\n\n    play(steps) {\n\n        console.log('Playing recording with', steps.length, 'steps');\n\n        this.showCursor();\n\n        let stepsCount = steps.length;\n        let timeout, currentStep;\n        \n        for (let stepNumber = 0; stepNumber < steps.length; stepNumber++) {\n            currentStep = steps[stepNumber];\n            if (currentStep.type === 'move') {\n                this.setCursorPosition(currentStep.x, currentStep.y);\n            }\n\n            if (currentStep.type === 'click') {\n                this.clickOnElementAtPosition(currentStep.x, currentStep.y);\n            }\n\n            if (currentStep.type === 'scroll') {\n                window.scrollTo(currentStep.x, currentStep.y);\n            }\n\n            preTime = nowTime;\n            nowTime = currentStep.time;\n\n            stepNumber++;\n\n            if (stepNumber === stepsCount) {\n                console.log('Finished playing recording');\n                window.clearTimeout(timeout);\n                this.hideCursor();\n            } else {\n                timeout = window.setTimeout(animate, nowTime - preTime);\n            }\n        }\n\n    }\n     clickOnElementAtPosition(x, y) {\n        let clickCandidate = document.elementFromPoint(x, y);\n\n        while (clickCandidate && !clickCandidate.click) {\n            clickCandidate = clickCandidate.parentNode;\n        }\n\n        if (clickCandidate && clickCandidate.click) {\n            clickCandidate.click();\n        }\n    }\n\n     getCursor() {\n        const cursorNode = document.createElement('div');\n\n        cursorNode.style.borderRadius = '50%';\n        cursorNode.style.background = 'red';\n        cursorNode.style.width = '10px';\n        cursorNode.style.height = '10px';\n        cursorNode.style.position = 'fixed';\n        cursorNode.style.top = 0;\n        cursorNode.style.left = 0;\n        cursorNode.style.zIndex = 999;\n\n        return cursorNode;\n    }\n\n     setCursorPosition(x, y) {\n        cursor.style.left = x + 'px';\n        cursor.style.top = y + 'px';\n    }\n\n     showCursor() {\n        cursor = cursor || this.getCursor();\n        document.body.appendChild(cursor);\n    }\n\n     hideCursor() {\n        document.body.removeChild(cursor);\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.showPlayer ?  <div id={\"playerCanvas\"}> </div> :\n                    <BasicTable\n                    tableHeaders={this.state.tableHeaders || []}\n                    tableData={this.state.tableData || []}\n                    handleShowPlayer={this.handleShowPlayer.bind(this)}\n                />}\n\n            </div>\n        );\n    }\n}\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}