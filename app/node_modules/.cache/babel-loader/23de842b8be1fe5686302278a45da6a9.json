{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tzach/Downloads/all/Tz Files/project/node-postgres-docker-compose-skeleton-master/app/src/modules/components/table.jsx\";\nimport React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  paper: {\n    height: 400,\n    width: '100%',\n    marginTop: 0,\n    overflow: 'auto',\n    background: '#ececec'\n  }\n});\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: '#585858',\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: '#dcdcdc'\n    },\n    '&:nth-of-type(even)': {\n      backgroundColor: '#cbcbcb'\n    }\n  }\n}))(TableRow);\n\nconst createTableComponent = props => {\n  const tableHeaders = props.tableHeaders || [];\n  const tableData = props.tableData || [];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    style: {\n      minWidth: props.width\n    },\n    stickyHeader: true,\n    \"aria-label\": \"simple table\",\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(StyledTableRow, {\n        hover: true,\n        children: tableHeaders.map((header, cellIdx) => {\n          return /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: header\n          }, cellIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 28\n          }, this);\n        })\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      children: tableData.map((data, rowIdx) => {\n        return /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          hover: true,\n          children: [\" \", Object.keys(data).map((key, cellIdx) => {\n            return /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: data[key]\n            }, cellIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 28\n            }, this);\n          })]\n        }, rowIdx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }, this);\n};\n\nfunction BasicTable(props) {\n  const {\n    classes,\n    theme\n  } = props;\n  const tableComponent = createTableComponent(props);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    className: classes.paper,\n    style: {\n      'overflowY': 'scroll'\n    },\n    children: tableComponent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_c = BasicTable;\nexport default withStyles(styles, {\n  withTheme: true\n})(BasicTable);\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/tzach/Downloads/all/Tz Files/project/node-postgres-docker-compose-skeleton-master/app/src/modules/components/table.jsx"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","withStyles","styles","theme","paper","height","width","marginTop","overflow","background","StyledTableCell","head","backgroundColor","color","palette","common","white","body","fontSize","StyledTableRow","root","createTableComponent","props","tableHeaders","tableData","minWidth","map","header","cellIdx","data","rowIdx","Object","keys","key","BasicTable","classes","tableComponent","withTheme"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE,GADL;AAEHC,IAAAA,KAAK,EAAE,MAFJ;AAGHC,IAAAA,SAAS,EAAE,CAHR;AAIHC,IAAAA,QAAQ,EAAE,MAJP;AAKHC,IAAAA,UAAU,EAAE;AALT;AADc,CAAL,CAApB;;AAUA,MAAMC,eAAe,GAAGT,UAAU,CAAEE,KAAD,KAAY;AAC3CQ,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EAAE,SADf;AAEFC,IAAAA,KAAK,EAAEV,KAAK,CAACW,OAAN,CAAcC,MAAd,CAAqBC;AAF1B,GADqC;AAK3CC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR;AALqC,CAAZ,CAAD,CAAV,CAQpBtB,SARoB,CAAxB;AAUA,MAAMuB,cAAc,GAAGlB,UAAU,CAAEE,KAAD,KAAY;AAC1CiB,EAAAA,IAAI,EAAE;AACF,0BAAsB;AAClBR,MAAAA,eAAe,EAAE;AADC,KADpB;AAIF,2BAAuB;AACnBA,MAAAA,eAAe,EAAE;AADE;AAJrB;AADoC,CAAZ,CAAD,CAAV,CASnBb,QATmB,CAAvB;;AAYA,MAAMsB,oBAAoB,GAAIC,KAAD,IAAW;AACpC,QAAMC,YAAY,GAAGD,KAAK,CAACC,YAAN,IAAsB,EAA3C;AACA,QAAMC,SAAS,GAAGF,KAAK,CAACE,SAAN,IAAmB,EAArC;AAEA,sBAAQ,QAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAEH,KAAK,CAAChB;AAAjB,KAAd;AAAuC,IAAA,YAAY,MAAnD;AAAoD,kBAAW,cAA/D;AAAA,4BACJ,QAAC,SAAD;AAAA,6BACI,QAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAA,kBACKiB,YAAY,CAACG,GAAb,CAAiB,CAACC,MAAD,EAASC,OAAT,KAAqB;AACnC,8BAAO,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC,IAA3B;AAAgC,YAAA,KAAK,EAAC,KAAtC;AAAA,sBAA2DD;AAA3D,aAAiDC,OAAjD;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA;AADL,SAA2B,CAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADI,eAQJ,QAAC,SAAD;AAAA,gBACKJ,SAAS,CAACE,GAAV,CAAc,CAACG,IAAD,EAAOC,MAAP,KAAkB;AAC7B,4BAAO,QAAC,cAAD;AAAgB,UAAA,KAAK,MAArB;AAAA,0BAAqCC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBH,GAAlB,CAAsB,CAACO,GAAD,EAAML,OAAN,KAAkB;AAChF,gCAAO,QAAC,eAAD;AAAA,wBAAgCC,IAAI,CAACI,GAAD;AAApC,eAAsBL,OAAtB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAF2C,CAArC;AAAA,WAA2BE,MAA3B;AAAA;AAAA;AAAA;AAAA,gBAAP;AAIH,OALA;AADL;AAAA;AAAA;AAAA;AAAA,YARI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAiBH,CArBD;;AAuBA,SAASI,UAAT,CAAoBZ,KAApB,EAA2B;AACvB,QAAM;AAAEa,IAAAA,OAAF;AAAYhC,IAAAA;AAAZ,MAAqBmB,KAA3B;AACA,QAAMc,cAAc,GAAGf,oBAAoB,CAACC,KAAD,CAA3C;AACA,sBACI,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAEtB,KAA3B;AAAkC,IAAA,SAAS,EAAEmC,OAAO,CAAC/B,KAArD;AAA4D,IAAA,KAAK,EAAE;AAAC,mBAAa;AAAd,KAAnE;AAAA,cACKgC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KARQF,U;AAST,eAAejC,UAAU,CAACC,MAAD,EAAS;AAAEmC,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwCH,UAAxC,CAAf","sourcesContent":["import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    paper: {\n        height: 400,\n        width: '100%',\n        marginTop: 0,\n        overflow: 'auto',\n        background: '#ececec'\n    },\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: '#585858',\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: '#dcdcdc',\n        },\n        '&:nth-of-type(even)': {\n            backgroundColor: '#cbcbcb',\n        }\n    },\n}))(TableRow);\n\n\nconst createTableComponent = (props) => {\n    const tableHeaders = props.tableHeaders || [];\n    const tableData = props.tableData || [];\n\n    return (<Table style={{minWidth: props.width}} stickyHeader aria-label=\"simple table\">\n        <TableHead>\n            <StyledTableRow hover key={0}>\n                {tableHeaders.map((header, cellIdx) => {\n                    return <StyledTableCell component=\"th\" scope=\"row\" key={cellIdx}>{header}</StyledTableCell>;\n                })}\n            </StyledTableRow>\n        </TableHead>\n        <TableBody>\n            {tableData.map((data, rowIdx) => {\n                return <StyledTableRow hover key={rowIdx}> {Object.keys(data).map((key, cellIdx) => {\n                    return <StyledTableCell key={cellIdx}>{data[key]}</StyledTableCell>;\n                })}\n                </StyledTableRow>\n            })}\n        </TableBody>\n    </Table>);\n}\n\nfunction BasicTable(props) {\n    const { classes , theme} = props;\n    const tableComponent = createTableComponent(props);\n    return (\n        <TableContainer component={Paper} className={classes.paper} style={{'overflowY': 'scroll'}}>\n            {tableComponent}\n        </TableContainer>\n    );\n}\nexport default withStyles(styles, { withTheme: true })(BasicTable);\n"]},"metadata":{},"sourceType":"module"}