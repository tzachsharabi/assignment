{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tzach/Downloads/all/Tz Files/project/node-postgres-docker-compose-skeleton-master/app/src/modules/player.jsx\";\nimport React from 'react';\nimport BasicTable from \"./table.jsx\";\nimport animateActions from \"./animate.js\";\nlet cursor;\nimport MenuBar from \"./components/menuBar\";\nimport MusicCard from \"./components/musicCard\";\nimport { db } from \"./components/db.js\";\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.pause = action => {\n      this.setState({\n        shouldPlayerPause: true\n      });\n    };\n\n    this.state = {\n      tableHeaders: ['Session Date', 'Duration', 'Play'],\n      tableData: null,\n      showPlayer: false,\n      shouldPlayerPause: false\n    };\n  }\n\n  componentDidMount() {\n    this.getRecords();\n  }\n\n  async getRecords() {\n    try {\n      const callRes = await fetch('http://localhost:3000/test_db/getRecords', {\n        // const res = await fetch('http://localhost:5000/test_db/saveRecord', {\n        method: 'get',\n        dataType: 'json',\n        contentType: 'application/json; charset=utf-8'\n      });\n      const finalRes = await callRes.json();\n      const failedToGetData = !(finalRes && finalRes.data && finalRes.statusCode === 200);\n\n      if (failedToGetData) {\n        console.error('Failed to get records');\n      }\n\n      const recordsData = finalRes.data.recordsData || [];\n      const tableData = recordsData.map(record => {\n        return {\n          sessionDate: record.sessionDate,\n          duration: record.duration,\n          play: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handlePlayBtnClick.bind(this, record.recordEvents),\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 27\n          }, this)\n        };\n      });\n      this.setState({\n        tableData: tableData || [],\n        recordsData: recordsData || []\n      });\n    } catch (ex) {\n      console.error(ex);\n    }\n  }\n\n  handlePlayBtnClick(steps) {\n    this.setState({\n      showPlayer: true\n    }, this.play.bind(this, steps));\n  }\n\n  play(steps) {\n    this.animate(steps);\n  }\n\n  animate(steps) {\n    cursor = animateActions.showCursor(cursor);\n    let nowTime = this.state.nowTime || 0;\n    let preTime = this.state.preTime || 0;\n    let stepNumber = this.state.stepNumber || 0;\n    let stepsCount = this.state.steps && this.state.steps.length || steps.length;\n    let timeout = this.state.timeout || null;\n    let currentStep = this.state.currentStep || null;\n    currentStep = steps[stepNumber];\n\n    if (currentStep.type === 'move') {\n      cursor = animateActions.setCursorPosition(currentStep.x, currentStep.y, cursor);\n    }\n\n    if (currentStep.type === 'click') {\n      cursor = animateActions.clickOnElementAtPosition(currentStep.x, currentStep.y, cursor);\n    }\n\n    if (currentStep.type === 'scroll') {\n      window.scrollTo(currentStep.x, currentStep.y);\n    }\n\n    preTime = nowTime;\n    nowTime = currentStep.time;\n    stepNumber++;\n\n    if (stepNumber === stepsCount) {\n      console.log('Finished playing recording');\n      window.clearTimeout(timeout);\n      cursor = animateActions.hideCursor(cursor);\n    } else {\n      timeout = setTimeout(() => {\n        // if (!this.state.shouldPlayerPause) {\n        this.setState({\n          stepNumber: stepNumber,\n          steps: steps,\n          cursor: cursor,\n          timeout: timeout,\n          stepsCount: stepsCount,\n          currentStep: currentStep,\n          nowTime: nowTime,\n          preTime: preTime\n        });\n        this.animate(); // }\n      }, preTime - nowTime);\n    }\n  }\n\n  clearPlayerData() {\n    this.setState({\n      stepNumber: 0,\n      steps: [],\n      cursor: null,\n      timeout: null,\n      stepsCount: 0\n    });\n  }\n\n  render() {\n    const content = this.state.showPlayer ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 49\n    }, this) : /*#__PURE__*/_jsxDEV(BasicTable, {\n      tableHeaders: this.state.tableHeaders || [],\n      tableData: this.state.tableData || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 68\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"playerCanvas\",\n        style: {\n          margin: '50px auto',\n          width: 700\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuBar, {\n          showPlayer: this.state.showPlayer || false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MusicCard, {\n          data: db.alternative[this.state.current - 1],\n          pause: () => this.pause(),\n          play: () => this.play,\n          content: content,\n          showPlayer: this.state.showPlayer || false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Player;","map":{"version":3,"sources":["/Users/tzach/Downloads/all/Tz Files/project/node-postgres-docker-compose-skeleton-master/app/src/modules/player.jsx"],"names":["React","BasicTable","animateActions","cursor","MenuBar","MusicCard","db","Player","Component","constructor","props","pause","action","setState","shouldPlayerPause","state","tableHeaders","tableData","showPlayer","componentDidMount","getRecords","callRes","fetch","method","dataType","contentType","finalRes","json","failedToGetData","data","statusCode","console","error","recordsData","map","record","sessionDate","duration","play","handlePlayBtnClick","bind","recordEvents","ex","steps","animate","showCursor","nowTime","preTime","stepNumber","stepsCount","length","timeout","currentStep","type","setCursorPosition","x","y","clickOnElementAtPosition","window","scrollTo","time","log","clearTimeout","hideCursor","setTimeout","clearPlayerData","render","content","margin","width","alternative","current"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BasicTable from \"./table.jsx\";\nimport animateActions from \"./animate.js\";\nlet cursor;\nimport MenuBar from \"./components/menuBar\";\nimport MusicCard from \"./components/musicCard\";\nimport { db } from \"./components/db.js\";\n\n\nclass Player extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            tableHeaders: ['Session Date', 'Duration', 'Play'],\n            tableData: null,\n            showPlayer: false,\n            shouldPlayerPause: false\n        }\n    }\n    componentDidMount() {\n        this.getRecords();\n    }\n\n    async getRecords() {\n        try {\n            const callRes = await fetch('http://localhost:3000/test_db/getRecords', {\n                // const res = await fetch('http://localhost:5000/test_db/saveRecord', {\n                method: 'get',\n                dataType: 'json',\n                contentType: 'application/json; charset=utf-8'\n            })\n            const finalRes = await callRes.json();\n            const failedToGetData = !(finalRes && finalRes.data && finalRes.statusCode === 200);\n            if (failedToGetData) {\n                console.error('Failed to get records');\n            }\n            const recordsData = finalRes.data.recordsData || [];\n            const tableData = recordsData.map((record) =>{\n                return {\n                    sessionDate: record.sessionDate,\n                    duration: record.duration,\n                    play: <button onClick={this.handlePlayBtnClick.bind(this, record.recordEvents)}>Play</button>\n                }\n            });\n            this.setState({tableData: tableData || [], recordsData: recordsData || []})\n        } catch (ex) {\n            console.error(ex)\n        }\n    }\n\n    handlePlayBtnClick(steps) {\n        this.setState({showPlayer: true}, this.play.bind(this, steps))\n    }\n\n    play(steps) {\n\n        this.animate(steps)\n\n    }\n\n    animate(steps) {\n        cursor = animateActions.showCursor(cursor);\n        let nowTime = this.state.nowTime || 0;\n        let preTime = this.state.preTime || 0;\n        let stepNumber = this.state.stepNumber || 0;\n        let stepsCount = this.state.steps && this.state.steps.length || steps.length;\n        let timeout = this.state.timeout || null;\n        let currentStep = this.state.currentStep || null;\n\n        currentStep = steps[stepNumber];\n        if (currentStep.type === 'move') {\n            cursor = animateActions.setCursorPosition(currentStep.x, currentStep.y, cursor);\n        }\n\n        if (currentStep.type === 'click') {\n            cursor = animateActions.clickOnElementAtPosition(currentStep.x, currentStep.y, cursor);\n        }\n\n        if (currentStep.type === 'scroll') {\n            window.scrollTo(currentStep.x, currentStep.y);\n        }\n\n        preTime = nowTime;\n        nowTime = currentStep.time;\n\n        stepNumber++;\n\n        if (stepNumber === stepsCount) {\n            console.log('Finished playing recording');\n            window.clearTimeout(timeout);\n            cursor = animateActions.hideCursor(cursor);\n        } else {\n\n            timeout = setTimeout(() => {\n                // if (!this.state.shouldPlayerPause) {\n                this.setState({\n                    stepNumber: stepNumber,\n                    steps: steps,\n                    cursor: cursor,\n                    timeout: timeout,\n                    stepsCount: stepsCount,\n                    currentStep: currentStep,\n                    nowTime: nowTime,\n                    preTime: preTime\n                });\n                this.animate()\n                // }\n            }, preTime - nowTime);\n        }\n    }\n\n\n    clearPlayerData (){\n        this.setState({\n            stepNumber: 0,\n            steps: [],\n            cursor: null,\n            timeout: null,\n            stepsCount: 0\n        });\n    }\n    pause = action => {\n        this.setState({shouldPlayerPause: true});\n    };\n\n\n    render() {\n        const content = this.state.showPlayer ? <div>hello</div> : <BasicTable\n            tableHeaders={this.state.tableHeaders || []}\n            tableData={this.state.tableData || []}\n        />\n        return (\n            <div >\n                <div id={\"playerCanvas\"} style={{margin: '50px auto', width: 700, }}>\n                    <MenuBar showPlayer={this.state.showPlayer || false}/>\n                    <MusicCard\n                        data={db.alternative[this.state.current - 1]}\n                        pause={() => this.pause()}\n                        play={() => this.play}\n                        content={content}\n                        showPlayer={this.state.showPlayer || false}/>\n                </div>\n\n            </div>\n        );\n    }\n}\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}