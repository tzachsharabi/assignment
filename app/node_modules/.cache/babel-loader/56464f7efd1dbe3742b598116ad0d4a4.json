{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tzach/Downloads/all/Tz Files/project/node-postgres-docker-compose-skeleton-master/app/src/modules/player.jsx\";\nimport React from 'react';\nimport BasicTable from \"./table.jsx\";\nlet preTime = 0;\nlet nowTime = 0;\nlet cursor;\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableHeaders: ['Session Date', 'Duration', 'Play'],\n      tableData: null,\n      showPlayer: false\n    };\n  }\n\n  componentDidMount() {\n    this.getRecords();\n  }\n\n  async handleShowPlayer(recordIdx) {\n    let recordToPlay = this.state.recordsData.some((el, idx) => {\n      return recordIdx === idx ? el : null;\n    });\n  }\n\n  async getRecords() {\n    try {\n      const callRes = await fetch('http://localhost:3000/test_db/getRecords', {\n        // const res = await fetch('http://localhost:5000/test_db/saveRecord', {\n        method: 'get',\n        dataType: 'json',\n        contentType: 'application/json; charset=utf-8'\n      });\n      const finalRes = await callRes.json();\n      const failedToGetData = !(finalRes && finalRes.data && finalRes.statusCode === 200);\n\n      if (failedToGetData) {\n        console.error('Failed to get records');\n      }\n\n      const recordsData = finalRes.data.recordsData || [];\n      const tableData = recordsData.map(record => {\n        return {\n          sessionDate: record.sessionDate,\n          duration: record.duration,\n          play: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 91\n          }, this)\n        };\n      });\n      this.setState({\n        tableData: tableData || [],\n        recordsData: recordsData || []\n      });\n    } catch (ex) {\n      console.error(ex);\n    }\n  }\n\n  play(steps) {\n    stop();\n    console.log('Playing recording with', steps.length, 'steps');\n    this.showCursor();\n    let stepNumber = 0;\n    let stepsCount = steps.length;\n    let timeout, currentStep;\n\n    (function animate() {\n      currentStep = steps[stepNumber];\n\n      if (currentStep.type === 'move') {\n        this.setCursorPosition(currentStep.x, currentStep.y);\n      }\n\n      if (currentStep.type === 'click') {\n        this.clickOnElementAtPosition(currentStep.x, currentStep.y);\n      }\n\n      if (currentStep.type === 'scroll') {\n        window.scrollTo(currentStep.x, currentStep.y);\n      }\n\n      preTime = nowTime;\n      nowTime = currentStep.time;\n      stepNumber++;\n\n      if (stepNumber === stepsCount) {\n        console.log('Finished playing recording');\n        window.clearTimeout(timeout);\n        this.hideCursor();\n      } else {\n        timeout = window.setTimeout(animate, nowTime - preTime);\n      }\n    })();\n  }\n\n  getCursor() {\n    const cursorNode = document.createElement('div');\n    cursorNode.style.borderRadius = '50%';\n    cursorNode.style.background = 'red';\n    cursorNode.style.width = '10px';\n    cursorNode.style.height = '10px';\n    cursorNode.style.position = 'fixed';\n    cursorNode.style.top = 0;\n    cursorNode.style.left = 0;\n    cursorNode.style.zIndex = 999;\n    return cursorNode;\n  }\n\n  setCursorPosition(x, y) {\n    cursor.style.left = x + 'px';\n    cursor.style.top = y + 'px';\n  }\n\n  showCursor() {\n    cursor = cursor || this.getCursor();\n    document.body.appendChild(cursor);\n  }\n\n  hideCursor() {\n    document.body.removeChild(cursor);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.showPlayer ? /*#__PURE__*/_jsxDEV(BasicTable, {\n        tableHeaders: this.state.tableHeaders || [],\n        tableData: this.state.tableData || [],\n        handleShowPlayer: this.handleShowPlayer.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"playerCanvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Player;","map":{"version":3,"sources":["/Users/tzach/Downloads/all/Tz Files/project/node-postgres-docker-compose-skeleton-master/app/src/modules/player.jsx"],"names":["React","BasicTable","preTime","nowTime","cursor","Player","Component","constructor","props","state","tableHeaders","tableData","showPlayer","componentDidMount","getRecords","handleShowPlayer","recordIdx","recordToPlay","recordsData","some","el","idx","callRes","fetch","method","dataType","contentType","finalRes","json","failedToGetData","data","statusCode","console","error","map","record","sessionDate","duration","play","setState","ex","steps","stop","log","length","showCursor","stepNumber","stepsCount","timeout","currentStep","animate","type","setCursorPosition","x","y","clickOnElementAtPosition","window","scrollTo","time","clearTimeout","hideCursor","setTimeout","getCursor","cursorNode","document","createElement","style","borderRadius","background","width","height","position","top","left","zIndex","body","appendChild","removeChild","render","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BasicTable from \"./table.jsx\";\nlet preTime = 0;\nlet nowTime = 0;\nlet cursor;\n\nclass Player extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            tableHeaders: ['Session Date', 'Duration', 'Play'],\n            tableData: null,\n            showPlayer: false\n        }\n    }\n    componentDidMount() {\n        this.getRecords();\n    }\n\n    async handleShowPlayer(recordIdx) {\n        let recordToPlay = this.state.recordsData.some((el, idx) =>{ return recordIdx  === idx ? el : null});\n    }\n\n    async getRecords() {\n        try {\n            const callRes = await fetch('http://localhost:3000/test_db/getRecords', {\n                // const res = await fetch('http://localhost:5000/test_db/saveRecord', {\n                method: 'get',\n                dataType: 'json',\n                contentType: 'application/json; charset=utf-8'\n            })\n            const finalRes = await callRes.json();\n            const failedToGetData = !(finalRes && finalRes.data && finalRes.statusCode === 200);\n            if (failedToGetData) {\n                console.error('Failed to get records');\n            }\n            const recordsData = finalRes.data.recordsData || [];\n            const tableData = recordsData.map((record) =>{\n                return {sessionDate: record.sessionDate, duration: record.duration, play: <button>Play</button>}\n            });\n            this.setState({tableData: tableData || [], recordsData: recordsData || []})\n        } catch (ex) {\n            console.error(ex)\n        }\n    }\n\n    play(steps) {\n\n        stop();\n\n        console.log('Playing recording with', steps.length, 'steps');\n\n        this.showCursor();\n\n        let stepNumber = 0;\n        let stepsCount = steps.length;\n        let timeout, currentStep;\n\n        (function animate() {\n            currentStep = steps[stepNumber];\n            if (currentStep.type === 'move') {\n                this.setCursorPosition(currentStep.x, currentStep.y);\n            }\n\n            if (currentStep.type === 'click') {\n                this.clickOnElementAtPosition(currentStep.x, currentStep.y);\n            }\n\n            if (currentStep.type === 'scroll') {\n                window.scrollTo(currentStep.x, currentStep.y);\n            }\n\n            preTime = nowTime;\n            nowTime = currentStep.time;\n\n            stepNumber++;\n\n            if (stepNumber === stepsCount) {\n                console.log('Finished playing recording');\n                window.clearTimeout(timeout);\n                this.hideCursor();\n            } else {\n                timeout = window.setTimeout(animate, nowTime - preTime);\n            }\n\n        }());\n    }\n\n     getCursor() {\n        const cursorNode = document.createElement('div');\n\n        cursorNode.style.borderRadius = '50%';\n        cursorNode.style.background = 'red';\n        cursorNode.style.width = '10px';\n        cursorNode.style.height = '10px';\n        cursorNode.style.position = 'fixed';\n        cursorNode.style.top = 0;\n        cursorNode.style.left = 0;\n        cursorNode.style.zIndex = 999;\n\n        return cursorNode;\n    }\n\n     setCursorPosition(x, y) {\n        cursor.style.left = x + 'px';\n        cursor.style.top = y + 'px';\n    }\n\n     showCursor() {\n        cursor = cursor || this.getCursor();\n        document.body.appendChild(cursor);\n    }\n\n     hideCursor() {\n        document.body.removeChild(cursor);\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.showPlayer ? <BasicTable\n                    tableHeaders={this.state.tableHeaders || []}\n                    tableData={this.state.tableData || []}\n                    handleShowPlayer={this.handleShowPlayer.bind(this)}\n                /> :  <div id={\"playerCanvas\"}></div>}\n\n            </div>\n        );\n    }\n}\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}