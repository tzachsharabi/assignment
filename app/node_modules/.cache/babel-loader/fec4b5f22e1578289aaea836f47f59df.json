{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tzach/Downloads/all/Tz Files/project/node-postgres-docker-compose-skeleton-master/app/src/modules/player.jsx\";\nimport React from 'react';\nimport BasicTable from \"./table.jsx\";\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableHeaders: ['name', 'date', 'time'],\n      tableData: null\n    };\n  }\n\n  componentDidMount() {\n    this.getRecords();\n  }\n\n  async getRecords() {\n    try {\n      const callRes = await fetch('http://localhost:3000/test_db/getRecords', {\n        // const res = await fetch('http://localhost:5000/test_db/saveRecord', {\n        method: 'get',\n        dataType: 'json',\n        contentType: 'application/json; charset=utf-8'\n      });\n      const finalRes = await callRes.json();\n      const failedToGetData = !(finalRes && finalRes.data && finalRes.statusCode === 200);\n\n      if (failedToGetData) {\n        console.error('Failed to get records');\n      }\n\n      const recordsData = finalRes.data.recordsData || [];\n      const tableData = recordsData.map(record => {\n        return {\n          sessionDate: record.sessionDate,\n          duration: record.duration,\n          play: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 91\n          }, this)\n        };\n      });\n      this.setState({\n        tableData: tableData || [],\n        recordsData: recordsData || []\n      });\n    } catch (ex) {\n      console.error(ex);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BasicTable, {\n        tableHeaders: this.state.tableHeaders || [],\n        tableData: this.state.tableData || []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Player;","map":{"version":3,"sources":["/Users/tzach/Downloads/all/Tz Files/project/node-postgres-docker-compose-skeleton-master/app/src/modules/player.jsx"],"names":["React","BasicTable","Player","Component","constructor","props","state","tableHeaders","tableData","componentDidMount","getRecords","callRes","fetch","method","dataType","contentType","finalRes","json","failedToGetData","data","statusCode","console","error","recordsData","map","record","sessionDate","duration","play","setState","ex","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CADN;AAERC,MAAAA,SAAS,EAAE;AAFH,KAAZ;AAIH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL;AACH;;AAED,QAAMA,UAAN,GAAmB;AACf,QAAI;AACA,YAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,0CAAD,EAA6C;AACpE;AACAC,QAAAA,MAAM,EAAE,KAF4D;AAGpEC,QAAAA,QAAQ,EAAE,MAH0D;AAIpEC,QAAAA,WAAW,EAAE;AAJuD,OAA7C,CAA3B;AAMA,YAAMC,QAAQ,GAAG,MAAML,OAAO,CAACM,IAAR,EAAvB;AACA,YAAMC,eAAe,GAAG,EAAEF,QAAQ,IAAIA,QAAQ,CAACG,IAArB,IAA6BH,QAAQ,CAACI,UAAT,KAAwB,GAAvD,CAAxB;;AACA,UAAIF,eAAJ,EAAqB;AACjBG,QAAAA,OAAO,CAACC,KAAR,CAAc,uBAAd;AACH;;AACD,YAAMC,WAAW,GAAGP,QAAQ,CAACG,IAAT,CAAcI,WAAd,IAA6B,EAAjD;AACA,YAAMf,SAAS,GAAGe,WAAW,CAACC,GAAZ,CAAiBC,MAAD,IAAW;AACzC,eAAO;AAACC,UAAAA,WAAW,EAAED,MAAM,CAACC,WAArB;AAAkCC,UAAAA,QAAQ,EAAEF,MAAM,CAACE,QAAnD;AAA6DC,UAAAA,IAAI,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnE,SAAP;AACH,OAFiB,CAAlB;AAGA,WAAKC,QAAL,CAAc;AAACrB,QAAAA,SAAS,EAAEA,SAAS,IAAI,EAAzB;AAA6Be,QAAAA,WAAW,EAAEA,WAAW,IAAI;AAAzD,OAAd;AACH,KAjBD,CAiBE,OAAOO,EAAP,EAAW;AACTT,MAAAA,OAAO,CAACC,KAAR,CAAcQ,EAAd;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,UAAD;AACI,QAAA,YAAY,EAAE,KAAKzB,KAAL,CAAWC,YAAX,IAA2B,EAD7C;AAEI,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAAX,IAAwB;AAFvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA5CgC;;AA8CrC,eAAeN,MAAf","sourcesContent":["import React from 'react';\nimport BasicTable from \"./table.jsx\";\n\nclass Player extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            tableHeaders: ['name', 'date', 'time'],\n            tableData: null,\n        }\n    }\n    componentDidMount() {\n        this.getRecords();\n    }\n\n    async getRecords() {\n        try {\n            const callRes = await fetch('http://localhost:3000/test_db/getRecords', {\n                // const res = await fetch('http://localhost:5000/test_db/saveRecord', {\n                method: 'get',\n                dataType: 'json',\n                contentType: 'application/json; charset=utf-8'\n            })\n            const finalRes = await callRes.json();\n            const failedToGetData = !(finalRes && finalRes.data && finalRes.statusCode === 200);\n            if (failedToGetData) {\n                console.error('Failed to get records');\n            }\n            const recordsData = finalRes.data.recordsData || [];\n            const tableData = recordsData.map((record) =>{\n                return {sessionDate: record.sessionDate, duration: record.duration, play: <button>Play</button>}\n            });\n            this.setState({tableData: tableData || [], recordsData: recordsData || []})\n        } catch (ex) {\n            console.error(ex)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <BasicTable\n                    tableHeaders={this.state.tableHeaders || []}\n                    tableData={this.state.tableData || []}\n                />\n            </div>\n        );\n    }\n}\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}